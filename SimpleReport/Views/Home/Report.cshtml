@using Newtonsoft.Json
@using SimpleReport.Model
@model SimpleReport.ViewModel.ReportViewModel
@{
    ViewBag.Title = "View Report";
}
<script type="text/javascript">
    @{
        //NOTE: reuse model to avoid getting data again. temporary during conversion.
    }
    var report = angular.module("report").value("reportViewModel", @Html.Raw(JsonConvert.SerializeObject(Model)));
</script>

<div ng-controller="reportController">

    @if (!ViewData.ModelState.IsValid)
    {
        <section class="content-header">
            <h1>
                Errors in request
            </h1>
        </section>
        <section class="content">
            @Html.ValidationSummary(false)
        </section>
    }
    else
    {
        <section class="content-header" data-ng-show="!autorefreshmode">
            <h1>
                {{:: viewModel.Report.Name }}
            </h1>
        </section>
        <section class="content" data-ng-show="!autorefreshmode">
            <p class="lead">{{:: viewModel.Report.Description}}</p>
            @using (Html.BeginForm("ExecuteReport", "Home", FormMethod.Get, new { role = "form" }))
            {
                <input type="hidden" name="reportId" value="@Model.Report.Id" class="form-control">
                <div class="box box-primary" data-ng-if="viewModel.Report.Parameters.length">
                    <div class="box-header">
                        <h3 class="box-title">Parameters</h3>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div data-ng-repeat="par in viewModel.Report.Parameters track by par.Key" class="report-parameter" data-ng-class="{ 'col-xs-12 col-sm-6 col-md-4 col-lg-3' : par.InputType != @((int)ParameterInputType.Period), 'col-xs-12 col-sm-12 col-md-8 col-lg-6' : par.InputType == @((int)ParameterInputType.Period)}">
                                <div class="form-group">
                                    <label class="control-label" for="{{par.Key}}">{{par.Label}}</label>
                                    <div>
                                        <input data-ng-if="par.InputType==@((int)ParameterInputType.Integer)" data-numeric data-ng-required="{{par.Mandatory}}" type="text" name="{{par.Key}}" data-ng-model="par.Value" placeholder="Integer" class="numeric form-control">

                                        <div data-ng-if="par.InputType==@((int)ParameterInputType.SyncedDate) || par.InputType==@((int)ParameterInputType.SyncedRunningDate)" class="input-group">
                                            <div class="flex-container">
                                                <div class="input-group-addon date-icon-container" style="padding: 9px 12px; flex: 1">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                                <div style="flex: 9;">
                                                    <input type="text" name="{{par.Key}}" uib-datepicker-popup="{{dateFormat}}" data-ng-change="dateChanged(par)" data-ng-model="par.DisplayValue" data-ng-required="{{par.Mandatory}}" class="form-control datepicker pull-right" is-open="par.open" ng-focus="par.open=true">
                                                </div>
                                                <div class="input-group">
                                                    <uib-timepicker ng-model="par.DisplayValue" hour-step="1" minute-step="15" name="sTime" show-meridian="false" min="min" max="max" show-spinners="false" data-ng-change="dateChanged(par)">
                                                    </uib-timepicker>
                                                </div>
                                            </div>
                                        </div>
                                        <div data-ng-if="par.InputType==@((int) ParameterInputType.Date)" class="input-group">
                                            <div class="flex-container">
                                                <div class="input-group-addon date-icon-container" style="padding: 9px 12px; flex: 1">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                                <div style="flex: 9;">
                                                    <input type="text" name="{{par.Key}}" uib-datepicker-popup="{{dateFormat}}" data-ng-change="dateChanged(par)" data-ng-model="par.DisplayValue" data-ng-required="{{par.Mandatory}}" class="form-control datepicker pull-right" is-open="par.open" ng-focus="par.open=true">
                                                </div>
                                                <div class="input-group">
                                                    <uib-timepicker ng-model="par.DisplayValue" hour-step="1" minute-step="15" name="sTime" show-meridian="false" min="min" max="max" show-spinners="false" data-ng-change="dateChanged(par)">
                                                    </uib-timepicker>
                                                </div>
                                            </div>
                                        </div>

                                        <div data-ng-if="par.InputType==@((int) ParameterInputType.Period)">
                                            <input type="hidden" value="{{par.Value}}" name="{{par.Key}}" />
                                            <select data-ng-required="{{par.Mandatory}}" class="form-control" data-ng-options="c.Key as c.Value for c in par.Choices" data-ng-model="par.EnumValue" data-ng-change="periodChanged(par)">
                                                <option value="">[Please Choose...]</option>
                                            </select>
                                            <div data-ng-show="par.EnumValue === '9999'" class="row" style="padding-top: 10px;">
                                                <div class="col-xs-6">
                                                    <div class="input-group">
                                                        <span class="input-group-addon text-bold">From</span>
                                                        <input type="text" uib-datepicker-popup="{{dateFormat}}" data-ng-change="periodChanged(par)" show-weeks="true" data-ng-model="par.from" data-max data-ng-required="{{par.Mandatory}}" class="form-control datepicker pull-left" is-open="par.openfrom" ng-focus="par.openfrom=true">
                                                        <uib-timepicker ng-model="par.from" hour-step="1" minute-step="15" name="sTime" show-meridian="false" min="min" max="max" show-spinners="false" data-ng-change="periodChanged(par)">
                                                        </uib-timepicker>
                                                    </div>
                                                </div>
                                                <div class="col-xs-6">
                                                    <div class="input-group ">
                                                        <span class="input-group-addon text-bold">To</span>
                                                        <input type="text" uib-datepicker-popup="{{dateFormat}}" data-ng-change="periodChanged(par)" show-weeks="true" data-ng-model="par.to" data-ng-required="{{par.Mandatory}}" class="form-control datepicker pull-right" is-open="par.opento" ng-focus="par.opento=true">
                                                        <uib-timepicker ng-model="par.to" hour-step="1" minute-step="15" name="sTime" show-meridian="false" min="min" max="max" show-spinners="false" data-ng-change="periodChanged(par)">
                                                        </uib-timepicker>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <select data-ng-if="par.InputType==@((int) ParameterInputType.LookupMultipleChoice)" name="{{par.Key}}" class="form-control"
                                                multiselect-dropdown
                                                data-msd-value="par.Value"
                                                data-msd-choices="par.Choices"
                                                data-msd-name="par.Key"
                                                data-msd-required="par.Mandatory" multiple="multiple"></select>

                                        <select data-ng-if="par.InputType==@((int) ParameterInputType.Lookup)" data-ng-required="{{par.Mandatory}}" name="{{par.Key}}" class="form-control" data-ng-model="par.Value">
                                            <option value="">[Please Choose...]</option>
                                            <option data-ng-repeat="(k,v) in par.Choices" value="{{v.Key}}">{{v.Value}}</option>
                                        </select>

                                        <div data-ng-if="par.InputType==@((int) ParameterInputType.TypeAhead)">
                                            <input type="hidden" value="{{par.Value}}" name="{{par.Key}}" />
                                            <input type="text" data-ng-model="par.Value" data-uib-typeahead="typeahead.Id as typeahead.Name for typeahead in getTypeAheadData(par.ReportId, par.TypeAheadReportId, $viewValue)" typeahead-loading="loading" typeahead-editable="true" typeahead-no-results="noResults" typeahead-min-length="3" typeahead-show-hint="true" class="form-control"
                                                   typeahead-on-select="onSelect(par,$item,$model,$label)">
                                            <i ng-show="loading" class="glyphicon glyphicon-refresh"></i>
                                            <div ng-show="noResults">
                                                <i class="glyphicon glyphicon-remove"></i> No Results Found
                                            </div>
                                            <div>Choosen: {{par.typeaheadLabel}}</div>
                                        </div>

                                        <input data-ng-if="par.InputType==@((int)ParameterInputType.String) || par.InputType==@((int)ParameterInputType.StringList)" type="text" data-ng-required="{{par.Mandatory}}" name="{{par.Key}}" data-ng-model="par.Value" class="form-control" placeholder="{{par.Value}}">
                                    </div>
                                    <span class="help-block">{{par.HelpText}}</span>
                                    <label for="{{par.Key}}" generated="true" class="help-block error"></label>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <p data-ng-if="!viewModel.Report.Parameters.length">This report has no parameters.</p>

                <div class="box-footer">
                    <div class="row">
                        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12">
                            <button type="submit" class="btn btn-primary" ng-show="viewModel.Report.TemplateFormat===1 || viewModel.Report.TemplateFormat===0" data-ng-disabled="!hasValidParameters()"><i class="fa fa-fw fa-file-excel-o"></i>Excel</button>
                            <button type="submit" class="btn btn-primary" ng-show="viewModel.Report.TemplateFormat===2" data-ng-disabled="!hasValidParameters()"><i class="fa fa-fw fa-file-word-o"></i>Word</button>

                            <div class="btn-group">
                                <button type="button" class="btn btn-primary" data-ng-click="triggerOnScreen()" data-ng-show="viewModel.Report.OnScreenFormatAllowed" data-ng-disabled="!hasValidParameters()">On screen</button>
                                <button type="button" class="btn btn-primary" data-ng-click="triggerBookmark()" data-ng-show="viewModel.Report.OnScreenFormatAllowed" data-ng-disabled="!hasValidParameters()"><i class="fa fa-bookmark"></i></button>
                                <button type="button" class="btn btn-primary" data-ng-click="triggerAutoRefresh()" data-ng-show="viewModel.Report.AutoRefreshAllowed" data-ng-disabled="!hasValidParameters()"><i class="fa fa-desktop"></i></button>
                            </div>
                        </div>
                        <div class="col-lg-5 col-md-5 col-sm-7 col-xs-12">
                            <div class="btn-group pull-right">
                                <button type="button" class="btn btn-info" data-ng-click="selectedAction = 'sendOnce'" data-ng-show="viewModel.SubscriptionEnabled && viewModel.CanEditSubscriptions" data-ng-disabled="!hasvalidParametersForSubscription()">One time</button>
                                <button type="button" class="btn btn-info" data-ng-click="triggerSubscribe()" data-ng-show="viewModel.SubscriptionEnabled && viewModel.CanEditSubscriptions" data-ng-disabled="!hasvalidParametersForSubscription()">Subscribe</button>
                                <button type="button" class="btn btn-info" data-ng-click="selectedAction = 'editSubscriptions'" data-ng-show="viewModel.SubscriptionEnabled && viewModel.CanEditSubscriptions">Edit subscriptions</button>
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">
                            <button type="button" class="btn btn-primary pull-right" data-ng-click="selectedAction = 'editTemplate'" data-ng-show="viewModel.CanEditTemplate">Edit template</button>
                        </div>
                    </div>
                </div>

                <div data-ng-show="selectedAction" data-ng-switch="selectedAction" class="box box-actions" style="margin-top: 20px;">
                    <div data-ng-switch-when="onScreen">
                        <div data-on-screen-report data-reportid="viewModel.Report.Id" data-parameters="viewModel.Report.Parameters"></div>
                    </div>

                    <div data-ng-switch-when="subscribe">
                        <div data-subscription-editor data-report-id="viewModel.Report.Id" data-report-parameters="viewModel.Report.Parameters" data-subscription-id="subscriptionId" data-save-cb="onSubscriptionSaved()"></div>
                    </div>

                    <div data-ng-switch-when="sendOnce">
                        <div data-send-once-editor data-report-id="viewModel.Report.Id" data-report-parameters="viewModel.Report.Parameters" data-save-cb="onSendOnceSaved()"></div>
                    </div>

                    <div data-ng-switch-when="editSubscriptions">
                        <div data-subscription-list data-show-report-name-attr="false" data-show-subject-attr="false" data-show-recipients-attr="true" data-report-id="viewModel.Report.Id"></div>
                    </div>

                    <div data-ng-switch-when="editTemplate">
                        <div data-template-upload data-reportid="viewModel.Report.Id" data-has-report-template="viewModel.Report.HasTemplate" data-template-format="viewModel.Report.TemplateFormat" data-report-result-type="viewModel.Report.ReportResultType" data-report-result-types="viewModel.ReportResultTypes" data-showreport-result-types="false" data-convert-to-pdf="viewModel.Report.ConvertToPdf"></div>
                    </div>
                </div>
            }
        </section>

        <div data-ng-show="selectedAction" data-ng-switch="selectedAction">
            <div data-ng-switch-when="autorefresh" class="box box-primary refreshscreen" style="margin:20px;" data-ng-show="autorefreshmode">
                <div class="box-body">
                    <div data-on-screen-report data-reportid="viewModel.Report.Id" data-parameters="viewModel.Report.Parameters" data-refreshinterval="viewModel.Report.AutoRefreshIntervalInSeconds" data-title="viewModel.Report.Name" data-disablespinner="true"></div>
                </div>
            </div>
        </div>
    }
</div>
