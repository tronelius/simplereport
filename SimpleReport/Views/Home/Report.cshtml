@using Newtonsoft.Json
@using SimpleReport.Model
@model SimpleReport.ViewModel.ReportViewModel
@{
    ViewBag.Title = "View Report";
}
<script type="text/javascript">
    @{
        //NOTE: reuse model to avoid getting data again. temporary during conversion.
    }
    angular.module("report").value("reportViewModel", @Html.Raw(JsonConvert.SerializeObject(Model)));
</script>

<div ng-cloak ng-app="report" ng-controller="reportController">

    @if (!ViewData.ModelState.IsValid)
    {
        <section class="content-header">
            <h1>
                Errors in request
            </h1>
        </section>
        <section class="content">
            @Html.ValidationSummary(false)
        </section>
    }
    else
    {
        <section class="content-header">
            <h1>
                {{:: viewModel.Report.Name }}
            </h1>
        </section>
        <section class="content">
            <p class="lead">{{:: viewModel.Report.Description}}</p>
            @using (Html.BeginForm("ExecuteReport", "Home", FormMethod.Get, new { role = "form" }))
            {
                <input type="hidden" name="reportId" value="@Model.Report.Id" class="form-control">
                
                    <div class="box box-primary" data-ng-if="viewModel.Report.Parameters.length">
                        <div class="box-header">
                            <h3 class="box-title">Parameters</h3>
                        </div>

                        <div class="box-body">
                            <div class="row">

                                
                                    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3" data-ng-repeat="par in viewModel.Report.Parameters track by par.Key">
                                        <div class="form-group">
                                            <label class="control-label" for="{{par.Key}}">{{par.Label}}</label>

                                            <div data-ng-switch="par.InputType">
                                                <input data-ng-switch-when="@((int) ParameterInputType.Integer)" data-ng-required="{{par.Mandatory}}" type="text" name="{{par.Key}}" value="{{par.Value}}" placeholder="Integer" class="numeric form-control">

                                                <div data-ng-switch-when="@((int) ParameterInputType.Date)"  class="input-group">
                                                    <div class="input-group-addon">
                                                        <i class="fa fa-calendar"></i>
                                                    </div>
                                                    <input type="text" name="{{par.Key}}" value="{{par.Value}}" data-ng-required="{{par.Mandatory}}" class="form-control datepicker pull-right">
                                                </div>

                                                <select data-ng-switch-when="@((int) ParameterInputType.Period)" data-ng-required="{{par.Mandatory}}" name="{{par.Key}}" class="form-control">
                                                    <option value="">[Please Choose...]</option>
                                                    <option data-ng-repeat="(k,v) in par.Choices" value="{{k}}">{{v}}</option>
                                                </select>

                                                <select data-ng-switch-when="@((int) ParameterInputType.Lookup)" data-ng-required="{{par.Mandatory}}" name="{{par.Key}}" class="form-control">
                                                    <option value="">[Please Choose...]</option>
                                                    <option data-ng-repeat="(k,v) in par.Choices" value="{{k}}">{{v}}</option>
                                                </select>

                                                <input data-ng-switch-default type="text" data-ng-required="{{par.Mandatory}}" name="{{par.Key}}" value="{{par.Value}}" class="form-control" placeholder="String">
                                            </div>

                                            <span class="help-block">{{par.HelpText}}</span>
                                            <label for="{{par.Key}}" generated="true" class="help-block error"></label>
                                        </div>
                                    </div>

                            </div>
                        </div>
                    </div>
                
                    <p data-ng-if="!viewModel.Report.Parameters.length">This report has no parameters, just click on execute.</p>
                
                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Execute</button>
                </div>
            }
        </section>
    }
</div>